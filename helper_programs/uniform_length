#!/usr/bin/perl -w
use strict;

#####################################################################################
#                               uniform_length.pl                                   #
#####################################################################################
# This program creates a read file with reads with uniform length                   #
#    1) Selects the reads that are at least as long as the specified length ($len)  #
#    2) Trims the reads to the specified length                                     #
# All the produced reads are $len long                                              #
# The output file will be created in the current working directory                  #
#                                                                                   #
#    Inputs:                                                                        #
#                the length of the read files                                       #
#                a list of read files specified on the command line                 #
#    Outputs:                                                                       #
#                read file (with uniform read length) for each input file           #
#                                                                                   #
#    Requirements:                                                                  #
#                    working prinseq-lite.pl                                        #
#####################################################################################

# Print help message if the only argument is "-h"
if (@ARGV == 1 && $ARGV[0] eq '-h') {
    die "Usage:\n\t$0 <integer> <ReadFile>\n\n\tFor each read file the program will create a read file with reads that are exactly [integer] long\n";
}

# This variable holds the prinseq-lite executable
my $prinseq = 'prinseq-lite.pl';

# Test if prinseq is functioning
die "The specified command ($prinseq) does not work.\n" unless (`which $prinseq`);

# At least two inputs should be defined
die "Usage:\n\t$0 <integer> <ReadFile>\n\n\tFor each read file the program will create a read file with reads that are exactly [integer] long\n" unless scalar @ARGV > 1;

# The first argument is the length of the minimum sequence length
my $len = shift;

# Create the uniform-length read file for each input file
for my $in (@ARGV) {

    # Create the prefix for the output file
    my $final = $in;
    
    # Remove the file extension form the prefix
    $final =~ s/(\.f(ast)?q)|(\.fas(ta)?)//g;
    
    # Add the length to the prefix
    $final .= "_$len";
            
    if ($in =~ /\.f(ast)?q$/) {
        # Filter and trim the reads and save them to the outfile(=prefix.fastq)
        `prinseq-lite.pl -fastq $in -min_len $len -trim_to_len $len -out_good $final -out_bad null`;
    } else {
        # Filter and trim the reads and save them to the outfile(=prefix.fasta)
        `prinseq-lite.pl -fasta $in -min_len $len -trim_to_len $len -out_good $final -out_bad null`;
    }
}


#############
#    END    #
#############
